/*
generated by comer,https://github.com/imoowi/comer
Copyright Â© 2023 jun<simpleyuan@gmail.com>
*/
package services

import (
	"github.com/gin-gonic/gin"
	"github.com/imoowi/comer/interfaces/impl"
	"github.com/imoowi/live-stream-server/internal/models"
	"github.com/imoowi/live-stream-server/internal/repos"
)

var Event *EventService

type EventService struct {
	impl.Service[*models.Event]
}

func NewEventService(r *repos.EventRepo) *EventService {
	return &EventService{
		Service: *impl.NewService[*models.Event](r),
	}
}

func init() {
	RegisterServices(func() {
		Event = NewEventService(repos.Event)
	})
}

func (s *EventService) Status() any {
	return repos.Event.Status()
}

func (s *EventService) Add(c *gin.Context, model *models.Event) (newId uint, err error) {
	return repos.Event.Add(c, model)
}

func (s *EventService) GetOneByStream(c *gin.Context, stream string) (model *models.Event, err error) {
	return repos.Event.GetOneByStream(c, stream)
}

func (s *EventService) ChangeStatus(c *gin.Context, status models.EventStatus, id uint) (ok bool, err error) {
	return repos.Event.ChangeStatus(c, status, id)
}
